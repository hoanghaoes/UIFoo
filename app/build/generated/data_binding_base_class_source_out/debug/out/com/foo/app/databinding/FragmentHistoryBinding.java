// Generated by data binding compiler. Do not edit!
package com.foo.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.foo.app.R;
import com.foo.app.modules.history.data.viewmodel.HistoryVM;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentHistoryBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton btnVector;

  @NonNull
  public final ImageView imageIcon;

  @NonNull
  public final ImageView imageMusic;

  @NonNull
  public final ImageView imageRectangle250;

  @NonNull
  public final ImageView imageRightSide;

  @NonNull
  public final LinearLayout linearColumnmusic;

  @NonNull
  public final LinearLayout linearHeader;

  @NonNull
  public final LinearLayout linearHistory;

  @NonNull
  public final LinearLayout linearIOSStatusBar;

  @NonNull
  public final LinearLayout linearRowrectangle250;

  @NonNull
  public final LinearLayout linearRowzipcode;

  @NonNull
  public final RecyclerView recyclerHistory;

  @NonNull
  public final TextView txtN;

  @NonNull
  public final TextView txtZipcode;

  @Bindable
  protected HistoryVM mHistoryVM;

  protected FragmentHistoryBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageButton btnVector, ImageView imageIcon, ImageView imageMusic, ImageView imageRectangle250,
      ImageView imageRightSide, LinearLayout linearColumnmusic, LinearLayout linearHeader,
      LinearLayout linearHistory, LinearLayout linearIOSStatusBar,
      LinearLayout linearRowrectangle250, LinearLayout linearRowzipcode,
      RecyclerView recyclerHistory, TextView txtN, TextView txtZipcode) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnVector = btnVector;
    this.imageIcon = imageIcon;
    this.imageMusic = imageMusic;
    this.imageRectangle250 = imageRectangle250;
    this.imageRightSide = imageRightSide;
    this.linearColumnmusic = linearColumnmusic;
    this.linearHeader = linearHeader;
    this.linearHistory = linearHistory;
    this.linearIOSStatusBar = linearIOSStatusBar;
    this.linearRowrectangle250 = linearRowrectangle250;
    this.linearRowzipcode = linearRowzipcode;
    this.recyclerHistory = recyclerHistory;
    this.txtN = txtN;
    this.txtZipcode = txtZipcode;
  }

  public abstract void setHistoryVM(@Nullable HistoryVM historyVM);

  @Nullable
  public HistoryVM getHistoryVM() {
    return mHistoryVM;
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_history, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentHistoryBinding>inflateInternal(inflater, R.layout.fragment_history, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_history, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentHistoryBinding>inflateInternal(inflater, R.layout.fragment_history, null, false, component);
  }

  public static FragmentHistoryBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentHistoryBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentHistoryBinding)bind(component, view, R.layout.fragment_history);
  }
}
