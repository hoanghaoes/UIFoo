// Generated by data binding compiler. Do not edit!
package com.foo.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.foo.app.R;
import com.foo.app.modules.artifactinformation.data.viewmodel.ArtifactInformationVM;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityArtifactInformationBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton btnVector;

  @NonNull
  public final FrameLayout frameImg;

  @NonNull
  public final ImageView imageHome;

  @NonNull
  public final ImageView imageImageTwo;

  @NonNull
  public final ImageView imageMusic;

  @NonNull
  public final ImageView imageRightSide;

  @NonNull
  public final LinearLayout linearArtifactinform;

  @NonNull
  public final LinearLayout linearHeader;

  @NonNull
  public final LinearLayout linearIOSStatusBar;

  @NonNull
  public final LinearLayout linearName;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtKhuVnCc;

  @NonNull
  public final TextView txtThngtin;

  @Bindable
  protected ArtifactInformationVM mArtifactInformationVM;

  protected ActivityArtifactInformationBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ImageButton btnVector, FrameLayout frameImg, ImageView imageHome,
      ImageView imageImageTwo, ImageView imageMusic, ImageView imageRightSide,
      LinearLayout linearArtifactinform, LinearLayout linearHeader, LinearLayout linearIOSStatusBar,
      LinearLayout linearName, TextView txtDescription, TextView txtKhuVnCc, TextView txtThngtin) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnVector = btnVector;
    this.frameImg = frameImg;
    this.imageHome = imageHome;
    this.imageImageTwo = imageImageTwo;
    this.imageMusic = imageMusic;
    this.imageRightSide = imageRightSide;
    this.linearArtifactinform = linearArtifactinform;
    this.linearHeader = linearHeader;
    this.linearIOSStatusBar = linearIOSStatusBar;
    this.linearName = linearName;
    this.txtDescription = txtDescription;
    this.txtKhuVnCc = txtKhuVnCc;
    this.txtThngtin = txtThngtin;
  }

  public abstract void setArtifactInformationVM(
      @Nullable ArtifactInformationVM artifactInformationVM);

  @Nullable
  public ArtifactInformationVM getArtifactInformationVM() {
    return mArtifactInformationVM;
  }

  @NonNull
  public static ActivityArtifactInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_artifact_information, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityArtifactInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityArtifactInformationBinding>inflateInternal(inflater, R.layout.activity_artifact_information, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityArtifactInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_artifact_information, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityArtifactInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityArtifactInformationBinding>inflateInternal(inflater, R.layout.activity_artifact_information, null, false, component);
  }

  public static ActivityArtifactInformationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityArtifactInformationBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityArtifactInformationBinding)bind(component, view, R.layout.activity_artifact_information);
  }
}
